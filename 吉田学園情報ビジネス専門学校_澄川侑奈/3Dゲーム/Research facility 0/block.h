//--------------------------------------------------------------------------------
//
//	ブロックの処理 [block.h]
//	Author:Yuna Sumikawa
//
//--------------------------------------------------------------------------------
#ifndef  _BLOCK_H_
#define	_BLOCK_H_

#include "main.h"

//--------------------------------------------------------------------------------
//	マクロ定義
//--------------------------------------------------------------------------------
#define MAX_BLOCK		(1)		// 読み込むパーツ数

//--------------------------------------------------------------------------------
// モデルの構造体
//--------------------------------------------------------------------------------
typedef struct
{
	LPD3DXMESH pMesh;				// メッシュ(頂点情報)へのポインタ
	LPD3DXBUFFER pBuffMat;			// マテリアルへのポインタ
	DWORD nNumMat;					// マテリアルの数
	D3DXVECTOR3 pos;				// 位置(オフセット)
	D3DXVECTOR3 rot;				// 向き
	D3DXMATRIX mtxWorld;			// ワールドマトリックス
	int nldModelParent;				// 親のモデルのインデックス
}ModelBlock;

//--------------------------------------------------------------------------------
// ブロックの構造体
//--------------------------------------------------------------------------------
typedef struct
{
	D3DXVECTOR3 pos;				// 位置
	D3DXVECTOR3 rot;				// 向き
	D3DXVECTOR3 move;				// 移動量
	D3DXMATRIX mtxWorld;			// ワールドマトリックス
	bool bUse;						// 使用しているかどうか

	float fWidth;					// 幅
	float fHeight;					// 高さ
									
	ModelBlock aModel[MAX_BLOCK];	// モデル(パーツ)
	int nNumModel;					// モデル(パーツ)数
}Block;

//--------------------------------------------------------------------------------
// プロトタイプ宣言
//--------------------------------------------------------------------------------
HRESULT InitBlock(void);
void UninitBlock(void);
void UpdateBlock(void);
void DrawBlock(void);

Block *GetBlock(void);

#endif