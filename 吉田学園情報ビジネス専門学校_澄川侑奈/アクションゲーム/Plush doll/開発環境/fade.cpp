//--------------------------------------------------------------------------------
//
//	フェードの処理 tTitle.cpp]
//	Author:Yuna Sumikawa
//
//--------------------------------------------------------------------------------
#include "fade.h"

//-------------------------------------------------------------------------------
//	マクロ定義
//-------------------------------------------------------------------------------
#define SPEEDTIME	(0.05f)		//フェードのスピード

//-------------------------------------------------------------------------------
// コンストラク
//-------------------------------------------------------------------------------
CFade::CFade(PRIORITY nPriority) :CScene2D(nPriority)
{
	m_fade = FADE_NONE;
	m_cdorFade = D3DXCOLOR(0.0f,0.0f,0.0f,0.0f);
}

//-------------------------------------------------------------------------------
// デストラクタ
//-------------------------------------------------------------------------------
CFade::~CFade()
{
}

//-------------------------------------------------------------------------------
// フェード生成
//-------------------------------------------------------------------------------
CFade *CFade::Create(D3DXVECTOR3 pos, D3DXVECTOR3 scale, CManager::MODE modeNext)
{
	CFade *pFade = NULL;

	if (pFade == NULL)
	{// NULLだったら
	 // 動的確保
		pFade = new CFade;

		if (pFade != NULL)
		{// NULLじゃなかったら
		 // 初期化処理
			pFade->Init(pos, scale);

			// フェードアウト
			pFade->m_fade = FADE_OUT;

			// モードを代入
			pFade->m_modeNext = modeNext;

			// カラー設定
			pFade->m_cdorFade = D3DXCOLOR(0.0f, 0.0f, 0.0f, 0.0f);
		}
	}
	return pFade;
}
//-------------------------------------------------------------------------------
//	初期化処理
//-------------------------------------------------------------------------------
HRESULT CFade::Init(D3DXVECTOR3 pos, D3DXVECTOR3 scale)
{
	CScene2D::Init(pos,scale);

	return S_OK;
}

//-------------------------------------------------------------------------------
//	終了処理
//-------------------------------------------------------------------------------
void CFade::Uninit(void)
{
	CScene2D::Uninit();
}

//-------------------------------------------------------------------------------
//	更新処理
//-------------------------------------------------------------------------------
void CFade::Update(void)
{
	if (m_fade != FADE_NONE)
	{// フェード中じゃなかったら
		if (m_fade == FADE_IN)
		{//フェードイン
			m_cdorFade.a -= SPEEDTIME;		//フェードスピード

			if (m_cdorFade.a <= 0.0f)
			{
				m_fade = FADE_NONE;
				m_cdorFade.a = 0.0f;
			}
		}
		else if (m_fade == FADE_OUT)
		{//フェードアウト
			m_cdorFade.a += SPEEDTIME;		//フェードスピード

			if (m_cdorFade.a >= 1.0f)
			{
				m_cdorFade.a = 1.0f;
				m_fade = FADE_IN;
				CManager::SetMode(m_modeNext);
			}
		}
		// カラーの更新
		CScene2D::SetCol(m_cdorFade);
	}
}

//-------------------------------------------------------------------------------
//	描画処理
//-------------------------------------------------------------------------------
void CFade::Draw(void)
{
	CScene2D::Draw();
}

//-------------------------------------------------------------------------------
//	画面状態の保存
//-------------------------------------------------------------------------------
void CFade::SetFade(CManager::MODE modeNext)
{
	m_fade = FADE_OUT;
	m_modeNext = modeNext;
	m_cdorFade = D3DXCOLOR(0.0f, 0.0f, 0.0f, 0.0f);
}

//-------------------------------------------------------------------------------
//	フェード状態の取得
//-------------------------------------------------------------------------------
CFade::FADE CFade::GetFade(void)
{
	return m_fade;
}